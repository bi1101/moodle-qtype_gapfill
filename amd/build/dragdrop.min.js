define("qtype_gapfill/dragdrop",["exports"],(function(_exports){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.init=void 0;_exports.init=singleuse=>{Window.singleuse=singleuse;var draggables=document.querySelectorAll('span[class*="draggable"]');function drop(e){e.target.value=e.dataTransfer.getData("text/plain");var sourceId=e.dataTransfer.getData("sourceId"),sourceEl=document.getElementById(sourceId);Window.singleuse&&(sourceEl.classList.add("hide"),e.preventDefault()),e.preventDefault()}function dragStart(e){e.dataTransfer.setData("text/plain",e.target.innerText),e.dataTransfer.setData("sourceId",this.id)}draggables.forEach((function(e){e.addEventListener("dragstart",dragStart)})),document.querySelectorAll('input[class*="droptarget"]').forEach((function(e){e.addEventListener("dblclick",(function(){var that,targetVal;Window.singleuse&&(targetVal=(that=this).value,draggables.forEach((function(e){e.innerText.trim()===targetVal.trim()&&(e.classList.remove("hide"),that.value="")}))),this.value=""})),e.addEventListener("drop",drop)})),document.addEventListener("dragover",(function(e){e.preventDefault()}))}}));

//# sourceMappingURL=dragdrop.min.js.map