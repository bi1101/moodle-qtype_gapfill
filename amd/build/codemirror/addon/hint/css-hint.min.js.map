{"version":3,"sources":["../../../../src/codemirror/addon/hint/css-hint.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","pseudoClasses","registerHelper","cm","cur","getCursor","token","getTokenAt","inner","innerMode","getMode","state","mode","name","type","indexOf","string","list","from","Pos","line","start","to","end","ch","word","slice","test","spec","resolveMode","result","add","keywords","lastIndexOf","push","st","propertyKeywords","valueKeywords","colorKeywords","mediaTypes","mediaFeatures","length"],"mappings":"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","sourcesContent":["/*eslint-disable*/\n// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../../mode/css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../../mode/css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var pseudoClasses = {\"active\":1, \"after\":1, \"before\":1, \"checked\":1, \"default\":1,\n    \"disabled\":1, \"empty\":1, \"enabled\":1, \"first-child\":1, \"first-letter\":1,\n    \"first-line\":1, \"first-of-type\":1, \"focus\":1, \"hover\":1, \"in-range\":1,\n    \"indeterminate\":1, \"invalid\":1, \"lang\":1, \"last-child\":1, \"last-of-type\":1,\n    \"link\":1, \"not\":1, \"nth-child\":1, \"nth-last-child\":1, \"nth-last-of-type\":1,\n    \"nth-of-type\":1, \"only-of-type\":1, \"only-child\":1, \"optional\":1, \"out-of-range\":1,\n    \"placeholder\":1, \"read-only\":1, \"read-write\":1, \"required\":1, \"root\":1,\n    \"selection\":1, \"target\":1, \"valid\":1, \"visited\":1\n  };\n\n  CodeMirror.registerHelper(\"hint\", \"css\", function(cm) {\n    var cur = cm.getCursor(), token = cm.getTokenAt(cur);\n    var inner = CodeMirror.innerMode(cm.getMode(), token.state);\n    if (inner.mode.name != \"css\") return;\n\n    if (token.type == \"keyword\" && \"!important\".indexOf(token.string) == 0)\n      return {list: [\"!important\"], from: CodeMirror.Pos(cur.line, token.start),\n              to: CodeMirror.Pos(cur.line, token.end)};\n\n    var start = token.start, end = cur.ch, word = token.string.slice(0, end - start);\n    if (/[^\\w$_-]/.test(word)) {\n      word = \"\"; start = end = cur.ch;\n    }\n\n    var spec = CodeMirror.resolveMode(\"text/css\");\n\n    var result = [];\n    function add(keywords) {\n      for (var name in keywords)\n        if (!word || name.lastIndexOf(word, 0) == 0)\n          result.push(name);\n    }\n\n    var st = inner.state.state;\n    if (st == \"pseudo\" || token.type == \"variable-3\") {\n      add(pseudoClasses);\n    } else if (st == \"block\" || st == \"maybeprop\") {\n      add(spec.propertyKeywords);\n    } else if (st == \"prop\" || st == \"parens\" || st == \"at\" || st == \"params\") {\n      add(spec.valueKeywords);\n      add(spec.colorKeywords);\n    } else if (st == \"media\" || st == \"media_parens\") {\n      add(spec.mediaTypes);\n      add(spec.mediaFeatures);\n    }\n\n    if (result.length) return {\n      list: result,\n      from: CodeMirror.Pos(cur.line, start),\n      to: CodeMirror.Pos(cur.line, end)\n    };\n  });\n});\n"],"file":"css-hint.min.js"}